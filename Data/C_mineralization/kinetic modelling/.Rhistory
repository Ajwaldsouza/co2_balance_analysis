theme_classic()
View(data1)
ggplot(data=data_trt, aes(x= trmt, y=data_trt$`avg(grams)`, fill=type))+
geom_bar( stat= "identity", position="stack",
width = 0.35, colour = "black", size = 0.2, inherit.aes = T) +
geom_bar( data = data1, aes(x=trmt, y=type)
, stat = "identity", position=position_dodge())+
scale_fill_manual(values= alpha (c("#f4a582", "#0571b0", "#ca0020" ), .3 ))+
theme_classic()
head(data1)
data1$trmt <- factor(data2$trmt)
data1$type <- factor(data2$type, levels = c("initial_c"),
ordered = TRUE)
data1$trmt <- factor(data1$trmt)
data1$type <- factor(data1$type, levels = c("initial_c"),
ordered = TRUE)
data1$grams <- as.numeric(data1$grams)
ggplot(data=data_trt, aes(x= trmt, y=data_trt$`avg(grams)`, fill=type))+
geom_bar( stat= "identity", position="stack",
width = 0.35, colour = "black", size = 0.2, inherit.aes = T) +
geom_bar( data = data1, aes(x=trmt, y=type)
, stat = "identity", position=position_dodge())+
scale_fill_manual(values= alpha (c("#f4a582", "#0571b0", "#ca0020" ), .3 ))+
theme_classic()
ggplot(data=data_trt, aes(x= trmt, y=data_trt$`avg(grams)`, fill=type))+
geom_bar( stat= "identity", position="stack",
width = 0.35, colour = "black", size = 0.2, inherit.aes = T) +
geom_bar( data = data1, aes( y=type)
, stat = "identity", position=position_dodge())+
scale_fill_manual(values= alpha (c("#f4a582", "#0571b0", "#ca0020" ), .3 ))+
theme_classic()
data1
data1$type <- as.factor(data1$type, levels = c("initial_c"),
ordered = TRUE)
data1$type <- as.factor(data1$type)
data1$grams <- as.numeric(data1$grams)
ggplot(data=data_trt, aes(x= trmt, y=data_trt$`avg(grams)`, fill=type))+
geom_bar( stat= "identity", position="stack",
width = 0.35, colour = "black", size = 0.2, inherit.aes = T) +
geom_bar( data = data1, aes( y=type)
, stat = "identity", position=position_dodge())+
scale_fill_manual(values= alpha (c("#f4a582", "#0571b0", "#ca0020" ), .3 ))+
theme_classic()
xvect<-c(1,2,3)
xvect[2] <- "2"
xvect
v <- 1:3
names(v) <- c("a", "b", "c")
v[4]<-4
names(v[4])
1   x <- c(12L,6L,10L,8L,15L,14L,19L,18L,23L,59L)
x <- c(12L,6L,10L,8L,15L,14L,19L,18L,23L,59L)
median(x)
mylist<-list(1,2,"C",4,5)
unlist(mylist)
indat<-c("Ash Rd","Ash Cir","Ash St")
mu1 <- sd1 <- mu2 <- sd2 <- c(-1, +1)
design <- expand.grid(mu1=mu1, sd1=sd1, mu2=mu2, sd2=sd2)
mu1 <- design$mu1
sd1 <- design$sd1
mu2 <- design$mu2
sd2 <- design$sd2
mu1 <- c(0, mu1)
sd1 <- c(0, sd1)
mu2 <- c(0, mu2)
sd2 <- c(0, sd2)
# y1 = area of complex polygon
y1 <- c(3.54,4.36,5.89,2.17,4.1,1.4,2.33,1.67,1.35,8.9,11.36,7.97,9.84,2.86,4.15,2.43,2.55)
# y2 = dunno yet#y2 <- c(82, 83.7, 61.7,100, 82.1, 84.1, 67.7, 100, 82, 86.3, 66, 100, 82.2, 89.8, 68.6, 100)
# Full factorial model for the chosen y
model.y1 <- lm(y1 ~ mu1*sd1*mu2*sd2) # new version is more efficient; model.y1 <- lm(y1 ~ (musig + sdsig + muacier + sdacier)^4)
summary(model.y1)
#summary(model.y2)
predict(model.y1)   #Values you need for RSM
# Define the "paretoPlot" function
paretoPlot <- function(lsmodel){
# This code draws a Pareto plot; it requires the "ggplot2" library
library(ggplot2)
# Extract all the coefficients, except for the intercept
coeff.full <- coef(lsmodel)[2:length(coef(lsmodel))]
coeff.full <- na.omit(coeff.full)
# Return the absolute values of the coefficients
coeff.abs <- unname(abs(coeff.full))
coeff <- sort(coeff.abs, index.return=TRUE)
grouping <- unname((coeff.full>0)[coeff$ix])
grouping[grouping==FALSE]="Negative"
grouping[grouping==TRUE]="Positive"
temp <- names(coeff.full)[coeff$ix]
fnames <- factor(temp, levels=temp, ordered=TRUE)
group.colors <- c("Negative" = "grey", "Positive" = "black")
dat <- data.frame(
label=fnames,
value=coeff$x,
group=grouping
)
p <- ggplot(dat, aes(x=label, y=value, fill=group)) +
geom_bar(stat="identity") +
coord_flip() + theme_bw() +
scale_fill_manual(values=group.colors,name = "Sign of coefficient") +
xlab("Effect") +
ylab("Magnitude of effect") +
ggtitle("Pareto plot")
p          # Execute plot
return(p)  # Return plot, so user can continue to modify it
}
# Show a Pareto plot of the absolute coefficients for the two models
paretoPlot(model.y1)
20.485*e^0.086*1 - 16
20.485*exp(0.086*1) - 16
20.485*exp(0.086*16) - 16
20.485*exp(0.086*20) - 16
20.485*exp(0.086*21) - 16
272.32*exp(0.071*21) - 250
20.485*exp(0.086*21) - 16
272.32*exp(0.071*21) - 250
# Stomatal Conductance
SC = a/bk * log((bIak+(1-m))/(bIak exp(-kL)+(1-m)))
a = 8.9*10^-5
b = 2.1*10^-2
k = 0.94
m = 0.1
Ia = 32.6 #PAR Idash
L = 3.52
# Stomatal Conductance
SC = a/bk * log((bIak+(1-m))/(bIak exp(-kL)+(1-m)))
# Stomatal Conductance
SC = a/bk * log((b*Ia*k+(1-m))/(b*Ia*k * exp(-kL)+(1-m)))
# Stomatal Conductance
SC = a/b*k * log((b*Ia*k+(1-m))/(b*Ia*k * exp(-kL)+(1-m)))
# Stomatal Conductance
SC = a/b*k * log((b*Ia*k+(1-m))/(b*Ia*k * exp(-k*L)+(1-m)))
SC
272.32*exp(0.071*21) - 250
LA1 = 272.32*exp(0.071*1) - 250
LA2 = 272.32*exp(0.071*2) - 250
LA3 = 272.32*exp(0.071*3) - 250
LA4 = 272.32*exp(0.071*4) - 250
LA5 = 272.32*exp(0.071*5) - 250
LA6 = 272.32*exp(0.071*6) - 250
LA7 = 272.32*exp(0.071*7) - 250
LA8 = 272.32*exp(0.071*8) - 250
LA9 = 272.32*exp(0.071*9) - 250
LA10 = 272.32*exp(0.071*10) - 250
LA11 = 272.32*exp(0.071*11) - 250
LA12 = 272.32*exp(0.071*12) - 250
LA13 = 272.32*exp(0.071*13) - 250
LA14 = 272.32*exp(0.071*14) - 250
LA15 = 272.32*exp(0.071*15) - 250
LA16 = 272.32*exp(0.071*16) - 250
Total co2 = LA1*P + LA2-LA1*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
LA16 = 272.32*exp(0.071*16) - 250
P= 11
Total co2 = LA1*P + LA2-LA1*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
P= 11/10000
Total co2 = LA1*P + LA2-LA1*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
P= (11/10000)*57600
Total co2 = LA1*P + LA2-LA1*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
Total co2 = LA1*P + LA2-LA1*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
Total co2 = LA1*P + (LA2-LA1)*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
LA1*P +
(LA2-LA1)*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
co2 <-   LA1*P +
(LA2-LA1)*P +
(LA3-LA2)*P+
(LA4-LA3)*P+
(LA5-LA4)*P+
(LA6-LA5)*P+
(LA7-LA6)*P+
( LA8-LA7)*P+
(LA9-LA8)*P+
(LA10-LA9)*P+
(LA11-LA10)*P+
(LA12-LA11)*P+
(LA13-LA12)*P+
(LA14-LA13)*P+
(LA15-LA14)*P+
(LA16-LA15)*P
co2
co2*44
(co2*44)/1000
(co2*10^-6*44)/1000
(co2*10^-6*44)
CO2p = 0.05*4.54*2*0.3211*3.66
(co2*10^-6*44)
librarian::shelf(SeedCalc, dplyr, readr, tidyverse,
rstudioapi,  readxl, cowplot, ggpubr,
photobiology, photobiologyWavebands, ggspectra,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))
librarian::shelf(SeedCalc, dplyr, readr, tidyverse, janitor,
rstudioapi,  readxl, cowplot, ggpubr,
photobiology, photobiologyWavebands, ggspectra,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))
librarian::shelf( dplyr, readr, tidyverse, janitor, expss,
rstudioapi,  readxl, cowplot, ggpubr,
photobiology, photobiologyWavebands, ggspectra,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))
librarian::shelf(SeedCalc, dplyr, readr, GerminaR, expss, janitor, tidyverse,
rstudioapi, stringr, reshape2, readxl, cowplot, ggpubr,
update_all = FALSE)
remove.packages("rlang", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
librarian::shelf( dplyr, readr, tidyverse, janitor, expss,
rstudioapi,  readxl, cowplot, ggpubr,
photobiology, photobiologyWavebands, ggspectra,
update_all = FALSE)
library(rlang)
librarian::shelf( dplyr, readr, tidyverse, janitor, expss,
rstudioapi,  readxl, cowplot, ggpubr,
photobiology, photobiologyWavebands, ggspectra,
update_all = FALSE)
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
scales, tidyr, rstudioapi, car, latex2exp, Rmisc,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))                                 # Set working directory to source file location
#Reading the co2 .csv file
co2_g_peat <- read_csv("actual_co2_grams_peat.csv")%>%as_tibble()%>%
select(c(1,2, 14, 17))
#%>%mutate_at(c(2:17), ~ifelse(is.na(.), 0, .))
head(co2_g_peat)
# # Making cumulative CO2 readings
co2_g_peat_cum <-co2_g_peat%>%mutate_at(c(2:4), ~cumsum(.x), na.rm = TRUE)#%>%add_column(actual_co2, .before = 1)
#Reducing the dataset by reducing sampling interval
groups <- cut(as.POSIXct(co2_g_peat_cum$time), breaks="1 day")
library(plyr)
co2_g_peat_cum <- ddply(co2_g_peat_cum, "groups", tail, 1)[, -1]
co2_g_peat_cum$day <- c(0,1,2,3,4,5,6,7, 8,9,10,11,12,13,14,15)
t1 <- co2_g_peat_cum %>%
select(time, day, co2_grams1, co2_grams13,  co2_grams16) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, co2_per_kgdm, -time, -day) %>%
filter(complete.cases(.))%>%
add_column(trmt = "peat")%>%
# mutate(c_min = (c_min/25.03)*27.27)   # calculating C mineralization; 25.03 is the total carbon (g) in the initial dry matter
mutate(co2_per_kgdm = ((co2_per_kgdm*1000)/57.9)/1000) #calculating the mass of CO2 released (kg) per kg dm
#Reading the co2 .csv file
co2_g_plug <- read_csv("actual_co2_grams_plug.csv")%>%as_tibble()%>%
select(c(1,8, 11, 17))%>%
mutate_at(c(2:4), ~ifelse(is.na(.), 0, .))
head(co2_g_plug)
# # Making cumulative CO2 readings
co2_g_plug_cum <-co2_g_plug%>%mutate_at(c(2:4), ~cumsum(.x), na.rm = TRUE)#%>%add_column(actual_co2, .before = 1)
#Reducing the dataset by reducing sampling interval
groups <- cut(as.POSIXct(co2_g_plug_cum$time), breaks="1 day")
library(plyr)
co2_g_plug_cum <- ddply(co2_g_plug_cum, "groups", tail, 1)[, -1]
co2_g_plug_cum$day <- c(0,1,2,3,4,5,6,7, 8,9,10,11,12,13,14,15)
t2 <- co2_g_plug_cum %>%
select(time, day, co2_grams7, co2_grams10,  co2_grams16) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, co2_per_kgdm, -time, -day) %>%
filter(complete.cases(.))%>%
add_column(trmt = "plug")%>%
# mutate(c_min = (c_min/21.1311)*27.27)   # calculating C mineralization; 21.1311 is the total carbon (g) in the initial dry matter
mutate(co2_per_kgdm = ((co2_per_kgdm*1000)/47.7)/1000) #calculating the mass of CO2 released (kg) per kg dm
t_co2 <- rbind(t1, t2)
fit1 <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)),
data = t1,
start = list(a = 10, k = 0.1),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*(1-exp((-l)*day)),
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + bl,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.001),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.0001),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.00001),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.000001),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01, l = 0.1),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b,
data = t2,
start = list(a = 0.15, k = 0.2, b = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b,
data = t1,
start = list(a = 0.05, k = 0.1, b = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*l,
data = t1,
start = list(a = 0.05, k = 0.1, b = 0.01, l = 0.001),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b,
data = t1,
start = list(a = 0.05, k = 0.1, b = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*day,
data = t1,
start = list(a = 0.05, k = 0.1, b = 0.01),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
fit2x <- nls(
co2_per_kgdm ~ a*(1-exp((-k)*day)) + b*day,
data = t1,
start = list(a = 0.05, k = 0.1, b = 0.001),
trace =  T
,
control = list(maxiter = 1000, warnOnly= T , minFactor = 1/1024)
)
summary(fit2x)
