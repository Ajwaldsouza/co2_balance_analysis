limits = c(
as_datetime('2021-12-21 15:30:00'),
as_datetime('2022-01-05 15:30:00')
)
) +
labs(title = "Plug-based biowaste",x="Time (days)", y=expression(CO[2]~(g)/unit~DM~(g)), color="Treatment")+
theme_pubr()+
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
axis.line = element_line(size = 0.4))+
theme(#legend.position = c(0.8, 0.75),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position="top")+
scale_fill_manual(name="SCG (% of total mixture)",
labels = c("0%", "15%","30%", "50%"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"),
guide = guide_legend())+
scale_color_manual(name="SCG (% of total mixture)",
labels = c("0%", "15%","30%", "50%"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"),
guide = guide_legend())+
stat_summary(aes(color=trmt), fun  = "mean", geom = "line", size=0.85)+
stat_summary(geom = "ribbon", fun.data = mean_se, alpha = 0.25)
# Making a combined plot with means and SEM
fig_plug <- ggplot(data=p_co2, aes(x=time, y=co2_ppm, fill=trmt)) +
# scale_y_continuous(limits = c(0,5.5e-06), breaks=seq(0, 5e-06,1e-06))+
scale_x_datetime(
date_labels = c("1", "5", "10", "15"),
breaks = c(
as_datetime('2021-12-22 15:30:00'),
as_datetime('2021-12-26 15:30:00'),
as_datetime('2021-12-31 15:30:00'),
as_datetime('2022-01-05 15:30:00')
),
limits = c(
as_datetime('2021-12-21 15:30:00'),
as_datetime('2022-01-05 15:30:00')
)
) +
labs(title = "Plug-based biowaste",x="Time (days)", y=expression(CO[2]~(g)/unit~DM~(g)), color="Treatment")+
theme_pubr()+
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
axis.line = element_line(size = 0.4))+
theme(#legend.position = c(0.8, 0.75),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.position="top")+
scale_fill_manual(name="SCG (% of total mixture)",
labels = c("0%", "15%","30%", "50%"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"),
guide = guide_legend())+
scale_color_manual(name="SCG (% of total mixture)",
labels = c("0%", "15%","30%", "50%"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"),
guide = guide_legend())+
stat_summary(aes(color=trmt), fun  = "mean", geom = "line", size=0.85)+
stat_summary(geom = "ribbon", fun.data = mean_se, alpha = 0.25)
fig_plug
figure <- ggarrange(fig_peat, fig_plug,
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = T, legend = "bottom")
figure <- ggarrange(fig_peat, fig_plug,
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = T, legend = "bottom")
ggsave(file="co2_linegraph.pdf", plot=figure, width=10, height=4)
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
scales, tidyr, rstudioapi,readxl,Rmisc,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))                                 # Set working directory to source file location
dm_peat <- read_xlsx("DM_loss_peat.xlsx", sheet="means")%>%as_tibble()%>%select(c(2,10))
# dm_peat$trmt <- as.factor(dm_peat$trmt)
dm_peat$dm_loss_perc <- as.numeric(dm_peat$dm_loss_perc)
dm_peat$scg_perc <- c(0,0,0,0, 15, 15, 15, 15, 30, 30 ,30, 30, 50, 50, 50, 50)
dm_peat$scg_perc <- as.factor(dm_peat$scg_perc)
#ANOVA
model1 <- lm(dm_loss_perc ~ scg_perc, data = dm_peat)
model1
summary(model1)
anova(model1)
coefficients(model1)
#Tukeys test
library(agricolae)
HSD.test(model1, "scg_perc", group=T, alpha = 0.05, console = T)
summary_dm_peat <- summarySE(data=dm_peat, measurevar="dm_loss_perc",
groupvars=c("scg_perc"), na.rm = T)%>%as_tibble()
#add tukey comparison groups
summary_dm_peat$tukey <- c("a", "b", "b", "b")
p <- ggplot(data=summary_dm_peat, aes(x=scg_perc, y=dm_loss_perc))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=dm_peat, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=dm_loss_perc-se, ymax=dm_loss_perc+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(dm_loss_perc, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=2.5,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 30))+
labs(x = "SCG (% of total mixture)", y= "DM loss (%)")+
theme_pubr()
p
p <- ggplot(data=summary_dm_peat, aes(x=scg_perc, y=dm_loss_perc))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=dm_peat, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=dm_loss_perc-se, ymax=dm_loss_perc+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(dm_loss_perc, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=2.5,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 30))+
labs(title = "Mat-based biowaste",
x = "SCG (% of total mixture)", y= "DM loss (%)")+
theme_pubr()
dm_plug <- read_xlsx("DM_loss_plug.xlsx", sheet="means (2)")%>%as_tibble()%>%select(c(2,10))
# dm_plug$trmt <- as.factor(dm_plug$trmt)
dm_plug$dm_loss_perc <- as.numeric(dm_plug$dm_loss_perc)
dm_plug$scg_perc <- c(0,0,0,0, 15, 15, 15, 15, 30, 30 ,30, 30, 50, 50, 50, 50)
dm_plug$scg_perc <- as.factor(dm_plug$scg_perc)
#ANOVA
model2 <- lm(dm_loss_perc ~ scg_perc, data = dm_plug)
model2
summary(model2)
anova(model2)
#Tukeys test
library(agricolae)
HSD.test(model2, "scg_perc", group=T, alpha = 0.05, console = T)
summary_dm_plug <- summarySE(data=dm_plug, measurevar="dm_loss_perc",
groupvars=c("scg_perc"), na.rm = T)%>%as_tibble()
#add tukey comparison groups
summary_dm_plug$tukey <- c("a", "ab", "b", "ab")
q <- ggplot(data=summary_dm_plug, aes(x=scg_perc, y=dm_loss_perc))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=dm_plug, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=dm_loss_perc-se, ymax=dm_loss_perc+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(dm_loss_perc, digits = 2)),
position=position_dodge(width=0.9), vjust=5.5, size=4)+
geom_text(aes(label=tukey), nudge_y=3.86,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 30))+
labs(x = "SCG (% of total mixture)", y= "DM loss (%)")+
theme_pubr()
q
q <- ggplot(data=summary_dm_plug, aes(x=scg_perc, y=dm_loss_perc))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=dm_plug, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=dm_loss_perc-se, ymax=dm_loss_perc+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(dm_loss_perc, digits = 2)),
position=position_dodge(width=0.9), vjust=5.5, size=4)+
geom_text(aes(label=tukey), nudge_y=3.86,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 30))+
labs(title = "Plug-based biowaste",
x = "SCG (% of total mixture)", y= "DM loss (%)")+
theme_pubr()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Compiling figures
fig <- ggarrange(p, q, labels = c("a", "b"),ncol = 2, nrow = 1)
ggsave(file="dm_loss_perc.pdf", plot=fig, width=10, height=4.5)
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
scales, tidyr, rstudioapi,readxl,Rmisc,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))                                 # Set working directory to source file location
dm_peat <- read_xlsx("DM_loss_peat.xlsx", sheet = "means")%>%as_tibble()%>%select(c(11))
cum_co2_peat <- read_csv("co2_cum_g_peat.csv")%>%as_tibble()%>%select(-c(1,4,5))%>%slice(-c(17))
dm_peat <- read_csv("C_mineralization_peat.csv")%>%as_tibble()%>%select(c(5))
dataset_peat <- cbind(cum_co2_peat, dm_peat)
dataset_peat$trmt <- as.factor(dataset_peat$trmt)
dataset_peat_out <- dataset_peat%>%slice(-c(3, 8, 9, 13))
#generating summary data
summary_cum_co2_peat <- summarySE(data=dataset_peat_out, measurevar="cum_co2_g",
groupvars=c("trmt"), na.rm = T)%>%as_tibble()%>%dplyr::rename(
sd_co2 = sd,
se_co2 = se,
ci_co2 = ci
)
summary_dm_peat <- summarySE(data=dataset_peat_out, measurevar="c_loss",
groupvars=c("trmt"), na.rm = T)%>%as_tibble()%>%dplyr::rename(
sd_dm = sd,
se_dm = se,
ci_dm = ci
)
summary_peat <- cbind(summary_cum_co2_peat, summary_dm_peat)%>%select(-c(2,7,8))
p_peat <- ggplot(data=dataset_peat_out, aes(x=c_loss, y=cum_co2_g))+
stat_smooth(formula = y~x, method = "lm", alpha= 0.3, color= "#0571b0")+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
# stat_cor(method = "pearson")+
geom_point(aes(shape = trmt), size=2)+
geom_point(data = summary_peat, aes(x=c_loss, y=cum_co2_g, shape = trmt), color="#ca0020", size=3.5)+
geom_errorbar(data = summary_peat, aes(xmin=c_loss-se_dm, xmax=c_loss+se_dm), color="#ca0020", width=0.5)+
geom_errorbar(data = summary_peat, aes(ymin=cum_co2_g-se_co2, ymax=cum_co2_g+se_co2), color="#ca0020", width=0.25)+
scale_shape_manual(name = "SCG (% of total mixture)",
values=c(15, 16, 17, 8),
labels = c("0%", "15%","30%", "50%"))+
# scale_y_continuous(limits = c(0,21), breaks=seq(0, 25,5))+
# scale_x_continuous(limits = c(0,21), breaks=seq(0, 20,5))+
labs(x = "TOC loss (grams)", y=expression(Cumulative~CO[2]~(grams)))+
theme_pubr()
p_peat
# dm_plug <- read_xlsx("DM_loss_plug.xlsx", sheet = "means")%>%as_tibble()%>%select(c(11))
cum_co2_plug <- read_csv("co2_cum_g_plug.csv")%>%as_tibble()%>%slice(-c(17))
dm_plug <- read_csv("C_mineralization_plug.csv")%>%as_tibble()%>%select(c(5))
dataset_plug <- cbind(cum_co2_plug, dm_plug)
dataset_plug$trmt <- as.factor(dataset_plug$trmt)
dataset_plug_out <- dataset_plug%>%slice(-c(3, 7, 10, 16))
#generating summary data
summary_cum_co2_plug <- summarySE(data=dataset_plug_out, measurevar="cum_co2_g",
groupvars=c("trmt"), na.rm = T)%>%as_tibble()%>%dplyr::rename(
sd_co2 = sd,
se_co2 = se,
ci_co2 = ci
)
summary_dm_plug <- summarySE(data=dataset_plug_out, measurevar="c_loss",
groupvars=c("trmt"), na.rm = T)%>%as_tibble()%>%dplyr::rename(
sd_dm = sd,
se_dm = se,
ci_dm = ci
)
summary_plug <- cbind(summary_cum_co2_plug, summary_dm_plug)%>%select(-c(2,7,8))
p_plug <- ggplot(data=dataset_plug_out, aes(x=c_loss, y=cum_co2_g))+
stat_smooth(formula = y~x, method = "lm", alpha= 0.3, color= "#0571b0")+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
# stat_cor(method = "pearson")+
geom_point(aes(shape = trmt), size=2)+
geom_point(data = summary_plug, aes(x=c_loss, y=cum_co2_g, shape = trmt), color="#ca0020", size=3.5)+
geom_errorbar(data = summary_plug, aes(xmin=c_loss-se_dm, xmax=c_loss+se_dm), color="#ca0020", width=0.5)+
geom_errorbar(data = summary_plug, aes(ymin=cum_co2_g-se_co2, ymax=cum_co2_g+se_co2), color="#ca0020", width=0.25)+
scale_shape_manual(name = "SCG (% of total mixture)",
values=c(15, 16, 17, 8),
labels = c("0%", "15%","30%", "50%"))+
# scale_y_continuous(limits = c(0,21), breaks=seq(0, 25,5))+
# scale_x_continuous(limits = c(0,21), breaks=seq(0, 20,5))+
labs(x = "TOC loss (grams)", y=expression(Cumulative~CO[2]~(grams)))+
theme_pubr()
p_plug
#_______________________________________________________________________________
## Compiling figures
fig <- ggarrange(p_peat, p_plug, labels = c("a", "b"),ncol = 2, nrow = 1,
common.legend = T, legend = "bottom")
p_peat <- ggplot(data=dataset_peat_out, aes(x=c_loss, y=cum_co2_g))+
stat_smooth(formula = y~x, method = "lm", alpha= 0.3, color= "#0571b0")+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
# stat_cor(method = "pearson")+
geom_point(aes(shape = trmt), size=2)+
geom_point(data = summary_peat, aes(x=c_loss, y=cum_co2_g, shape = trmt), color="#ca0020", size=3.5)+
geom_errorbar(data = summary_peat, aes(xmin=c_loss-se_dm, xmax=c_loss+se_dm), color="#ca0020", width=0.5)+
geom_errorbar(data = summary_peat, aes(ymin=cum_co2_g-se_co2, ymax=cum_co2_g+se_co2), color="#ca0020", width=0.25)+
scale_shape_manual(name = "SCG (% of total mixture)",
values=c(15, 16, 17, 8),
labels = c("0%", "15%","30%", "50%"))+
# scale_y_continuous(limits = c(0,21), breaks=seq(0, 25,5))+
# scale_x_continuous(limits = c(0,21), breaks=seq(0, 20,5))+
labs(title = "Mat-based biowaste",x = "TOC loss (grams)", y=expression(Cumulative~CO[2]~(grams)))+
theme_pubr()
p_plug <- ggplot(data=dataset_plug_out, aes(x=c_loss, y=cum_co2_g))+
stat_smooth(formula = y~x, method = "lm", alpha= 0.3, color= "#0571b0")+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
# stat_cor(method = "pearson")+
geom_point(aes(shape = trmt), size=2)+
geom_point(data = summary_plug, aes(x=c_loss, y=cum_co2_g, shape = trmt), color="#ca0020", size=3.5)+
geom_errorbar(data = summary_plug, aes(xmin=c_loss-se_dm, xmax=c_loss+se_dm), color="#ca0020", width=0.5)+
geom_errorbar(data = summary_plug, aes(ymin=cum_co2_g-se_co2, ymax=cum_co2_g+se_co2), color="#ca0020", width=0.25)+
scale_shape_manual(name = "SCG (% of total mixture)",
values=c(15, 16, 17, 8),
labels = c("0%", "15%","30%", "50%"))+
# scale_y_continuous(limits = c(0,21), breaks=seq(0, 25,5))+
# scale_x_continuous(limits = c(0,21), breaks=seq(0, 20,5))+
labs(title = "Plug-based biowaste",
x = "TOC loss (grams)", y=expression(Cumulative~CO[2]~(grams)))+
theme_pubr()
#_______________________________________________________________________________
## Compiling figures
fig <- ggarrange(p_peat, p_plug, labels = c("a", "b"),ncol = 2, nrow = 1,
common.legend = T, legend = "bottom")
fig
#_______________________________________________________________________________
## Compiling figures
fig <- ggarrange(p_peat, p_plug, labels = c("a", "b"),ncol = 2, nrow = 1,
common.legend = T, legend = "bottom")
ggsave(file="toc_loss_vs_co2.pdf", plot=fig, width=10, height=4.5)
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
rstudioapi,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))                                 # Set working directory to source file location
temp_substrate_peat <- read_csv("temp_substrate_peat.csv")
#
#Manipulating Time
##Setting first column as date-time variable
temp_substrate_peat$time <- as_datetime(temp_substrate_peat$time)
#Reducing the dataset by reducing sampling interval
groups <- cut(as.POSIXct(temp_substrate_peat$time), breaks="30 min")
library(plyr)
temp_substrate_peat <- ddply(temp_substrate_peat, "groups", tail, 1)[, -1]
p1 <- temp_substrate_peat %>%
select(time,  sub_temp13, sub_temp14, sub_temp16) %>%                #Selecting the Vessels for the respective treatment
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "1")
p2 <- temp_substrate_peat %>%
select(time, sub_temp6, sub_temp8, sub_temp9, sub_temp11) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "2")
p3 <- temp_substrate_peat %>%
select(time, sub_temp2,  sub_temp12, sub_temp15) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "3")
p4 <- temp_substrate_peat %>%
select(time, sub_temp3, sub_temp4, sub_temp7, sub_temp10) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "4")
p5 <- temp_substrate_peat %>%
select(time, sub_temp17)  %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "ambient")
p <- rbind(p1, p2, p3, p4)
# Making a single plot with means and CI
fig_peat <- ggplot(data=p, aes(x=time, y=sub_temp)) +
scale_y_continuous(limits = c(18,24), breaks=seq(18, 24,2))+
scale_x_datetime(
date_labels = c("1", "5", "10", "15"),
breaks = c(
as_datetime('2021-12-02 19:30:00'),
as_datetime('2021-12-06 19:30:00'),
as_datetime('2021-12-11 19:30:00'),
as_datetime('2021-12-16 19:30:00')
),
limits = c(
as_datetime('2021-12-01 19:30:00'),
as_datetime('2021-12-16 19:30:00')
)
) +
labs(x="Time (days)", y="Temperature (°C)")+
theme_classic()+
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
axis.line = element_line(size = 0.4))+
# theme(legend.position = c(0.8, 0.75),
#       legend.direction = "vertical",
#       legend.title = element_text(size = 12),
#       legend.text = element_text(size = 10))+
scale_fill_manual(name="SCG (% of total mixture)",
labels = c("0", "15","30", "50"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))+
scale_color_manual(name="SCG (% of total mixture)",
labels = c("0", "15","30", "50"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))+
stat_summary(aes(color=trmt), fun  = "mean", geom = "line" , size=0.6)+
stat_summary(aes(fill=trmt), geom = "ribbon", fun.data = mean_se , alpha = 0.2)+
geom_line(data = p5, aes(x=time, y=sub_temp, linetype=trmt),
size=0.55 )+
scale_linetype_manual(name ="", labels= c("Ambient"),values=c("ambient"=2))+
guides(linetype = guide_legend(order=2), col = guide_legend(order = 1), fill = guide_legend(order = 1))
# Making a single plot with means and CI
fig_peat <- ggplot(data=p, aes(x=time, y=sub_temp)) +
scale_y_continuous(limits = c(18,24), breaks=seq(18, 24,2))+
scale_x_datetime(
date_labels = c("1", "5", "10", "15"),
breaks = c(
as_datetime('2021-12-02 19:30:00'),
as_datetime('2021-12-06 19:30:00'),
as_datetime('2021-12-11 19:30:00'),
as_datetime('2021-12-16 19:30:00')
),
limits = c(
as_datetime('2021-12-01 19:30:00'),
as_datetime('2021-12-16 19:30:00')
)
) +
labs(title = "Mat-based biowaste",x="Time (days)", y="Temperature (°C)")+
theme_classic()+
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
axis.line = element_line(size = 0.4))+
# theme(legend.position = c(0.8, 0.75),
#       legend.direction = "vertical",
#       legend.title = element_text(size = 12),
#       legend.text = element_text(size = 10))+
scale_fill_manual(name="SCG (% of total mixture)",
labels = c("0", "15","30", "50"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))+
scale_color_manual(name="SCG (% of total mixture)",
labels = c("0", "15","30", "50"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))+
stat_summary(aes(color=trmt), fun  = "mean", geom = "line" , size=0.6)+
stat_summary(aes(fill=trmt), geom = "ribbon", fun.data = mean_se , alpha = 0.2)+
geom_line(data = p5, aes(x=time, y=sub_temp, linetype=trmt),
size=0.55 )+
scale_linetype_manual(name ="", labels= c("Ambient"),values=c("ambient"=2))+
guides(linetype = guide_legend(order=2), col = guide_legend(order = 1), fill = guide_legend(order = 1))
#*********************************************************************************
#-------------------------------PLUG BASED----------------------------------------
#********************************************************************************
temp_substrate_plug <- read_csv("temp_substrate_plug.csv")
#
#Manipulating Time
##Setting first column as date-time variable
temp_substrate_plug$time <- as_datetime(temp_substrate_plug$time)
#Reducing the dataset by reducing sampling interval
groups <- cut(as.POSIXct(temp_substrate_plug$time), breaks="30 min")
library(plyr)
temp_substrate_plug <- ddply(temp_substrate_plug, "groups", tail, 1)[, -1]
t1 <- temp_substrate_plug %>%
select(time, sub_temp10, sub_temp14, sub_temp16) %>%                #Selecting the Vessels for the respective treatment
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "1")
t2 <- temp_substrate_plug %>%
select(time,  sub_temp3, sub_temp11) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "2")
t3 <- temp_substrate_plug %>%
select(time, sub_temp4,  sub_temp8, sub_temp9) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "3")
t4 <- temp_substrate_plug %>%
select(time, sub_temp6, sub_temp12, sub_temp15) %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "4")
t5 <- temp_substrate_plug %>%
select(time, sub_temp17)  %>%
mutate(time = as_datetime(paste0(time, "-01"))) %>%
gather(vessel, sub_temp, -time) %>%
filter(complete.cases(.)) %>%
add_column(trmt = "ambient")
t <- rbind(t1, t2, t3, t4)
# Making a single plot with means and CI
fig_plug <- ggplot(data=t, aes(x=time, y=sub_temp)) +
scale_y_continuous(limits = c(18,24), breaks=seq(18, 24,2))+
scale_x_datetime(
date_labels = c("1", "5", "10", "15"),
breaks = c(
as_datetime('2021-12-22 15:30:00'),
as_datetime('2021-12-26 15:30:00'),
as_datetime('2021-12-31 15:30:00'),
as_datetime('2022-01-05 15:30:00')
),
limits = c(
as_datetime('2021-12-21 15:30:00'),
as_datetime('2022-01-05 19:30:00')
)
) +
labs(title = "Plug-based biowaste",x="Time (days)", y="Temperature (°C)")+
theme_classic()+
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
axis.line = element_line(size = 0.4))+
# theme(legend.position = c(0.8, 0.75),
#       legend.direction = "vertical",
#       legend.title = element_text(size = 12),
#       legend.text = element_text(size = 10))+
scale_fill_manual(name="SCG (% of total mixture)",
labels = c("0", "15","30", "50"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))+
scale_color_manual(name="SCG (% of total mixture)",
labels = c("0", "15","30", "50"),
values = c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))+
stat_summary(aes(color=trmt), fun  = "mean", geom = "line" , size=0.6)+
stat_summary(aes(fill=trmt), geom = "ribbon", fun.data = mean_se , alpha = 0.2)+
geom_line(data = t5, aes(x=time, y=sub_temp, linetype=trmt),
size=0.55 )+
scale_linetype_manual(name ="", labels= c("Ambient"),values=c("ambient"=2))+
guides(linetype = guide_legend(order=2), col = guide_legend(order = 1), fill = guide_legend(order = 1))
# Making collage of peat and plug based temperature
figure_temp_substrate <- ggarrange(fig_peat, fig_plug,
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = T, legend = "bottom")
#Saving the plot
# Step 1: Call the pdf command to start the plot
pdf(file = "temp_sub.pdf",   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 4.5)
figure_temp_substrate
dev.off()
