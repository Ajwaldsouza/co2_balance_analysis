geom_text(aes(label=round(cum_co2_g, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=0.018,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 0.2))+
labs(x = "CEA biowaste type", y= expression(Total~CO[2]~(grams)))+
theme_pubr()
p
p <- ggplot(data=summary, aes(x=trmt, y=cum_co2_g))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=cum_co2, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=cum_co2_g-se, ymax=cum_co2_g+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(cum_co2_g, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=0.02,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 0.2))+
labs(x = "CEA biowaste type", y= expression(Total~CO[2]~(grams)))+
theme_pubr()
p
#Saving the plot
# Call the pdf command to start the plot
pdf(file = "cum_co2.pdf",   # The directory you want to save the file in
width = 5.83, # The width of the plot in inches
height = 4.13)
p
dev.off()
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
scales, tidyr, rstudioapi,readxl,Rmisc,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))                                 # Set working directory to source file location
co2_cum_peat <- read_csv("co2_cum_g_peat.csv")%>%as_tibble()%>%
select(c(2,3))%>%
slice(c(1,2,4))%>%
mutate(cum_co2_g = cum_co2_g/57.89)
co2_cum_plug <- read_csv("co2_cum_g_plug.csv")%>%as_tibble()%>%
select(c(2,3))%>%
slice(c(1,2,4))%>%
mutate(cum_co2_g = cum_co2_g/47.7)
cum_co2 <- rbind(co2_cum_peat, co2_cum_plug)
cum_co2$cum_co2_g <- as.numeric(cum_co2$cum_co2_g)
cum_co2$trmt <- as.factor(cum_co2$trmt)
#ANOVA
model1 <- lm(cum_co2_g ~ trmt, data = cum_co2)
model1
summary(model1)
anova(model1)
#Tukeys test
library(agricolae)
HSD.test(model1, "trmt", group=T, alpha = 0.05, console = T)
summary <- summarySE(data=cum_co2, measurevar="cum_co2_g",
groupvars=c("trmt"), na.rm = T)%>%as_tibble()
#add tukey comparison groups
summary$tukey <- c("a", "b")
p <- ggplot(data=summary, aes(x=trmt, y=cum_co2_g))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=cum_co2, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=cum_co2_g-se, ymax=cum_co2_g+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(cum_co2_g, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=0.02,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 0.2))+
labs(x = "CEA biowaste type", y= expression(Total~CO[2]~(grams)))+
theme_pubr()
p
p <- ggplot(data=summary, aes(x=trmt, y=cum_co2_g))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=cum_co2, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=cum_co2_g-se, ymax=cum_co2_g+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(cum_co2_g, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=0.02,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 0.2))+
labs(x = "CEA biowaste type", y= expression(Total~CO[2]~(grams)/Initial~dry~matter~(grams)))+
theme_pubr()
p
p <- ggplot(data=summary, aes(x=trmt, y=cum_co2_g))+
geom_bar(stat= "identity", width = 0.75, fill="#bdbdbd")+
geom_point(data=cum_co2, stat = "identity", size=3,
#alpha=0.95,
color = "#e34a33",
position = position_jitter(width = 0.2)
)+
geom_errorbar(aes(ymin=cum_co2_g-se, ymax=cum_co2_g+se), width=.2,
position = position_dodge2(width=0.85))+
geom_text(aes(label=round(cum_co2_g, digits = 2)),
position=position_dodge(width=0.9), vjust=4, size=4)+
geom_text(aes(label=tukey), nudge_y=0.02,  size=4)+
scale_y_continuous(expand=c(0,0), limits = c(0, 0.2))+
scale_x_discrete(labels=c("peat" = "Mat-based", "plug" = "Plug-based"))+
labs(x = "CEA biowaste type", y= expression(Total~CO[2]~(g)/Initial~dry~matter~(g)))+
theme_pubr()
p
#Saving the plot
# Call the pdf command to start the plot
pdf(file = "cum_co2.pdf",   # The directory you want to save the file in
width = 5.83, # The width of the plot in inches
height = 4.13)
p
dev.off()
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
scales, tidyr, rstudioapi,readxl,Rmisc,ggeasy,scales, ggforce,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))
View(summary)
CO2p = 0.05*4.54*2*0.3211*3.66
CO2v = (1.96 * 0.02 * 1 * (1000 - 415.68)/ 10^6)*16*16
CO2total =  CO2p+CO2v
CO2total
# Peat based CO2 per DM: 1 kg DM produces 0.0362 kg CO2
# Crop residue produced in the system: 0.205 kg DM
# CO2 produced from the total residue:
peat =0.204*0.0362
# Plug based CO2 per DM: 1 kg DM produces 0.158 kg CO2
# Crop residue produced in the system: 0.205 kg DM
# CO2 produced from the total residue:
plug =0.204*0.158
# Theoretical max based on 0.3 kg CO2/ kg DM
TMax =  0.204*0.3
source <- c("co2total" , "peat", "plug", "theoretical")
value <- c(CO2total, peat, plug, TMax)
type <- c("demand", "supply", "supply", "supply")
co2_dataset <- data.frame(source, value, type)%>%as_tibble()
head(co2_dataset)
View(co2_dataset)
View(summary)
sd <- c(0, 0.005, 0.017, 0)
co2_dataset <- data.frame(source, value, type, sd)%>%as_tibble()
head(co2_dataset)
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.17,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_errorbar(aes(ymin=cum_co2_g-se, ymax=cum_co2_g+se), width=.2,
position = position_dodge2(width=0.85))+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
View(cum_co2)
View(co2_dataset)
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.17,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.2,
position = position_dodge2(width=0.85))+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.17,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position = position_dodge2(width=0.85))+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.17,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_pointrange(aes(ymin=value-sd, ymax=value+sd), width=.2,
position = position_dodge2(width=0.85))+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.17,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_range(aes(ymin=value-sd, ymax=value+sd), width=.2,
position = position_dodge2(width=0.85))+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
?geom_pointrange
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.17,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_linerange(aes(ymin=value-sd, ymax=value+sd), width=.2
)+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
#Call the pdf command to start the plot
pdf(file = "co2_balance.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 4)
p
dev.off()
ggsave(file="co2_balance_2.pdf", plot=p, width=9, height=4)
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.2,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_linerange(aes(ymin=value-sd, ymax=value+sd), width=.2
)+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.5,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_linerange(aes(ymin=value-sd, ymax=value+sd), width=.2
)+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
#Call the pdf command to start the plot
pdf(file = "co2_balance.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 4)
p
dev.off()
ggsave(file="co2_balance_2.pdf", plot=p, width=9, height=4)
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.5,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_linerange(aes(ymin=value-sd, ymax=value+sd), width=.4
)+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.5,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_linerange(aes(ymin=value-sd, ymax=value+sd), size=.4
)+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
# Plotting dataset
p <-    ggbarplot(data = co2_dataset, x= "source", y="value",
color = "white",
fill = "type",
width = 0.6,
# palette = c("#ED2201", "#01468B"),
sort.val = "asc",
sort.by.groups = F,     # Don't sort within each group
rotate = T,
label = T,
lab.nb.digits = 3,
lab.hjust	= -0.5,
lab.vjust = 0.4,
xlab = "",
ylab = expression(CO[2]~(kg)),
ggtheme = theme_pubr()
)+
geom_linerange(aes(ymin=value-sd, ymax=value+sd), size=1
)+
scale_y_continuous(limits = c(0, 0.65), breaks = c(0, 0.2, 0.4, 0.6 ),
expand =c(0,0),
labels = c("0.00"= "0",  "0.20" = "0.2", "0.40" = "0.4", "0.60" = "0.6"))+
scale_x_discrete(labels = c("co2total" = expression(CO[2~Total]), "theoretical" = "Max. theoretical",
"plug"= "Plug-based residue", "peat" = "Mat-based residue"))+
scale_fill_manual(labels = c("demand" = "Required", "supply" = "Recoverable"),
values = c("#ED2201", "#01468B"))+
easy_remove_y_axis(what = c("ticks", "line"), teach = FALSE)+
labs(fill = "")
p
#Call the pdf command to start the plot
pdf(file = "co2_balance.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 4)
p
dev.off()
ggsave(file="co2_balance_2.pdf", plot=p, width=9, height=4)
librarian::shelf(tidyverse, ggplot2, dplyr, tibble, readr, lubridate, ggpubr,
scales, tidyr, rstudioapi,readxl,Rmisc,ggeasy,scales, ggforce,
update_all = FALSE)
##Setup working Directory
setwd(dirname(getActiveDocumentContext()$path))
CO2p = 0.05*4.54*2*0.3211*3.66
CO2v = (1.96 * 0.02 * 1 * (1000 - 415.68)/ 10^6)*16*16
CO2total =  CO2p+CO2v
CO2total
# Peat based CO2 per DM: 1 kg DM produces 0.0362 kg CO2
# Crop residue produced in the system: 0.205 kg DM
# CO2 produced from the total residue:
peat =0.204*0.0362
# Plug based CO2 per DM: 1 kg DM produces 0.158 kg CO2
# Crop residue produced in the system: 0.205 kg DM
# CO2 produced from the total residue:
plug =0.204*0.158
# Theoretical max based on 0.3 kg CO2/ kg DM
TMax =  0.204*0.3
source <- c("co2total" , "peat", "plug", "theoretical")
value <- c(CO2total, peat, plug, TMax)
type <- c("demand", "supply", "supply", "supply")
sd <- c(NA, 0.005, 0.017, NA)
co2_dataset <- data.frame(source, value, type, sd)%>%as_tibble()
head(co2_dataset)
View(co2_dataset)
